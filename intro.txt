HTML  - hypertext markup language - creating website and web appications. - content

- Tags  - <button> , <img> , <div> , span , h1 to h6
     opening and closing - 
     <button>  </button>


basic stucture 

<!DOCTYPE html> - it is declaration we are using the latest version of html 
<html>
    <head>
    </head>

    <body>
    </body>
</html>


html5 - media files , security https , tags  , 

html tag - below is the html document. 

head  -  head tag  - description head tag - 

body - body i.e what ever content is there on website , it will come here.



Inline Elements and Block Elements

Inline Elements : oocupy space equal to the its content. example : span , a , etc

Block Element : occupy whole line


Lets today CSS : Casacading style sheets - html document styles - we use it like text formatting , colur , background colur, 

BOX MODEL in CSS 

Content , Border , Padding and Margin

Content is text wirtten under the tag
Border  - container in which content is there.
padding is distance between content and Border
Margin is distnace outside the border.



CSS  - cascading style sheets

3 CSS 
 - Inline CSS 
 - Internal CSS 
 - External CSS 

 Inline CSS  - which is written besides the tags with use of style attribute
  

Internal CSS  - which is written in the same html files. we use style tag in head tag for adding the CSS.

external CSS  - CSS is there in the seperated file 
 we link the CSS extrenal file using link tag - it should also be in the head tag.



Web application  -HTML  -structure
                 - CSS - Styling
                 - JS  - functionality




CSS selectors - internal and external CSS
 - using id and class  - 
 - id  -># and class  -> . -> Definate CSS selector

 id is always unique in html document.
 class can be same for more than 1 tags


 Types of inputs in html
  - text - name , 
  - number - age , mobile_no , 
  -email - 
  -password
  - radio
  - checkbox
  - file
  - date and time
  - dropdowns using select and option tags


Types of css selectors
using id and class - 
psuedo class  - applying css to particular state of an Element
psuedo element  - applying css to particular side/ sub element from that element.
using tags - least prefer.


Priority 
id > Class > tags

inline css > internal css > external css.








CSS position

Types of postion :

1 static position : default position - flow top to bottom , left to right -normal flow 
top , bottom , left and right  

2 Relative postion  - normal flow  - top , right , left and bottom - affect here.


3 Fixed postion : position will be fixed. 

4 Absolute position : first it will check its parent,



In HTMl there are two kinds of elements - Inline and Block

Inline element - space occupy equal to their content - span
Block element - occupy whole space. - div


CSS  - cascading style sheets

we acccess the elments using the html attributes.

There 3 types of css  - Inline , Internal , external


Different types of CSS selectors
1 using id and class - id-> #idname , class -> .classname
2 Directly using tag

3 Relational CSS selector 
 - +
 - >
 - <


 psuedo class and psedo element
 pseudo class -> You want to apply CSS on particular state of the element


psuedo elements -> when we want to apply css on the particular part of an element



CSS Box model 

 - Content -
 - Padding - distance between the content and border , inside the border

 - Border
 - Margin


CSS positions :

1 Static :  default position - top to bottom/ left to right , isme we can't change the margin using left , right , top and bottom.

2 Absolute : flow top to bottom , left to right , we can change the margin using left , right , top and bottom

3 Relative : child element will check the postion of parent element , if parent element does not have any postion , it will go for absolute

4 Fixed : postion is fixed





Display Property In CSS

- Inline 
- Block 
- flex
- Grid
- None


display - 
flex - container types
grid  - matrix structure
block - 
inline -
none - 

display flex ->
1 Container Type structure
2 parent flex - we give layout to all the childs 
3 


By default - display - horizontally align - row form

flex-direction - row , row-reverse , column , column-reverse.
flex-direction : row, , row-reverse

main axis - row (horizontal line ) - justify-content and cross axis (vertical line) - align-items

flex-direction - column 
main axis - veritcal - justify content , and cross axis - horizontal - align-items


justify-content : main axis control
align-item : cross axis control


flex-wrap -> wrap - it will wrap all the child in multiple lines
flex-wrap -> nowrap - it will wrap all the child in single line



display flex , display grid , display inline , display block , display none

display flex is used to keep the UI in the container
flex Property is applied on parent element , automatically child elements apply 



display flex  -> row , column (row-reverse , column-reverse)


by default row consider

flex-direction : row , column , row-reverse , column-reverse

flex-direction:row

justify-content - main axis layout
align-items - cross axis layout

row
justify-content -> main axis layout -> horizontal
align-items -> cross axis layout -> vertical

column
justify-content -> main axis layout -> vertical
align-items -> cross axis layout -> horizontal


- flex-start 
- flex-end
- center
- space-around 
- space-between
- space-evenly